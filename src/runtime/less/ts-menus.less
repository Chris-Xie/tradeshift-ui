@import "ts-variables.less";

.ts-menu {
	list-style: none;
	> li {
		display: block;	
		overflow: hidden;
		margin: 0;
		padding: 0;
		> button,
		> a {
			border-bottom: 1px solid @ts-white;
			background-color: @ts-liteblue;
			&:before {
				.ts-mixin-maximize();
				content: "";
				right: auto;
				width: 5px;
			}
			&:focus:not(:active) {
				outline: none;
				&:before {
					background-color: @ts-blue;
				}
			}
			&:hover:not(:disabled),
			&:focus {
				background-color: @ts-liteblue-dark;
			}

			&:not(.ts-object) {
				.ts-mixin-unselectable();
				display: block;
				position: relative;
				width: 100%;
				padding: @ts-unit-half @ts-unit-half (@ts-unit-half - 1px) @ts-unit-half;
				text-align: left;
				text-decoration: none;

				> span,
				> sub {
					width: 100%;
					display: block;
					padding-right: @ts-unit-plus; // icon on the right by default
				}
				> sub {
					text-transform: uppercase;
					font-size: @ts-fontsize-small;
				}

				> i {
					position: absolute;
					left: @ts-unit-half; // icon on the left by default
					line-height: 0;
					top: 50%;
					&:only-child {
						position: relative;
						left: 0;
					}
				}

				// icon on the right
				& > span + i,
				& > sub + i {
					left: auto;
					right: @ts-unit-half;
				}

				// icon on the left
				& > i ~ span,
				& > i ~ sub {
					padding-right: inherit;
					padding-left: @ts-unit-plus;
				}

				&:hover {
					span,
					sub,
					& {
						text-decoration: none;
					}
				}
			}
			&:disabled {
				color: @ts-medium-litest;
				background-color: @ts-lite-liter;
				cursor: not-allowed;
			}
		}
		&:first-child {
			> button,
			> a {
				.ts-mixin-rounded-t ();
				&:focus:before {
					.ts-mixin-rounded-tl ();
				}
			}
		}
		&:last-child {
			> button,
			> a {
				border-bottom: none;
				&:not(.ts-object) {
					padding-bottom: @ts-unit-half;
				}
				.ts-mixin-rounded-b ();
				&:focus:before {
					.ts-mixin-rounded-bl ();
				}
			}
		}
		&:only-child {
			> button,
			> a {
				.ts-mixin-rounded ();
				&:focus:before {
					.ts-mixin-rounded-l ( );
				}
			}
		}
		&.ts-checked {
			> button,
			> a {
				&, &:hover {
					background-color: @ts-blue;
					color: @ts-white;
				}
				&:focus:before {
					background-color: @ts-blue-dark;
				}
			}
		}
	}
}
