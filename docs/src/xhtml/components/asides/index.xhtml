<!DOCTYPE html>
<html>
	<head>
		<title>Aside HTML</title>
		<script src="tabs.js"></script>
		<script>
			function toggle(/*...selectors*/) {
				Array.forEach(arguments, function(selector) {
					ts.ui.get(selector).toggle();
				});
			}
		</script>
	</head>
	<body>
		<header data-ts="TopBar"></header>
		<main data-ts="Main">
			<article>
				<h1>Aside</h1>
				<section class="desc">
					<p>Side-panel used for small user interactions, such as selecting a date.</p>
				</section>
				<section>
					<p>The <val>Aside</val> component <em>must</em> be created with a child component <val>Panel</val>.</p>
					<figure data-ts="DoxMarkup">
						<script>
							<aside data-ts="Aside">
								<div data-ts="Panel">
									<p>Aside content.</p>
								</div>
							</aside>
						</script>
					</figure>
					<p>You can create the <val>Aside</val> wherever you like, just make sure that it's positioned outside of the <val>Main</val> element when it opens.</p>
					<figure data-ts="DoxMarkup">
						<script>
							<main data-ts="Main">
								<p>Main content.</p>
							</main>
							<aside data-ts="Aside">
								<div data-ts="Panel">
									<p>Aside content.</p>
								</div>
							</aside>
						</script>
					</figure>
				</section>

				<h3>Adding a header</h3>
				<section>
					<p>The <att>data-ts.title</att> attribute configures the aside with a <a data-ts="Button" onclick="toggle('#myaside');">nice header</a>.</p>
					<figure data-ts="DoxMarkup">
						<script>
							<aside data-ts="Aside" data-ts.title="Aside Header">
								<div data-ts="Panel">
									<p>Aside content.</p>
								</div>
							</aside>
						</script>
					</figure>
					<p>You can color the header by assigning any of the classnames
						<code class="attr-value">ts-bg-blue</code>,
						<code class="attr-value">ts-bg-green</code>,
						<code class="attr-value">ts-bg-red</code> and
						<code class="attr-value">ts-bg-purple</code>
						to the <code class="el">aside</code> element itself.</p>
					<figure data-ts="DoxMarkup">
						<script>
							<aside data-ts="Aside" class="ts-bg-red">
								<div data-ts="Panel"></div>
							</aside>
						</script>
					</figure>
				</section>

				<h3>Opening the aside</h3>
				<section>
					<p>The <att>data-ts.open</att> attribute can be flipped to toggle the aside.</p>
					<figure data-ts="DoxMarkup">
						<script>
							<aside data-ts="Aside" data-ts.open="false" id="myaside">
								<div data-ts="Panel">
									<p>Aside content.</p>
								</div>
							</aside>
						</script>
					</figure>
					<p>Let's try that with jQuery.</p>
					<figure data-ts="DoxScript">
						<script type="runnable">
							$('#myaside').attr('data-ts.open', true);
						</script>
					</figure>
				</section>
				
				<h3>Showing the spinner</h3>
				<section>
					<p>The <att>data-ts.busy</att> attribute can be set to show the spinner</p>
					<figure data-ts="DoxMarkup">
						<script>
							<aside data-ts="Aside" data-ts.busy="Busy message!">
								<div data-ts="Panel">
									<p>Aside content.</p>
								</div>
							</aside>
						</script>
					</figure>
				</section>
				<section>
					<p>Let's try that with jQuery.</p>
					<figure data-ts="DoxScript">
						<script type="runnable">
							var aside = $("#myaside");
							aside.attr('data-ts.busy', 'Loading');
							aside.attr('data-ts.open', true);
							setTimeout(function() {
								aside.attr('data-ts.busy', '');
								setTimeout(function() {
									aside.attr('data-ts.open', false);
								}, 500);
							}, 1500);
						</script>
					</figure>
				</section>
				
				<h3>Adding some tabs</h3>
				<section>
					<p>If an <val>Aside</val> contains more than one <val>Panel</val>,
					we will automatically create a TabBar to switch between the panels like in <a data-ts="Button" onclick="ts.ui.get('#tabaside').open()">this example</a>.</p>
					<figure data-ts="DoxMarkup">
						<script>
							<aside data-ts="Aside">
								<div data-ts="Panel" data-ts.label="Tab 1">
									<p>aside content.</p>
								</div>
								<div data-ts="Panel" data-ts.label="Tab 2">
									<p>aside content.</p>
								</div>
							</aside>
						</script>
					</figure>
				</section>

				<h3>Tracking the state</h3>
				<section>
					<p>You can setup inline callbacks to be invoked when the aside changes state using one of <code class="attr-name">onopen</code>, 
						<code class="attr-name">onopened</code>, 
						<code class="attr-name">onclose</code> and 
						<code class="attr-name">onclosed</code>. 
						You can also do this with <a data-ts="Button" href="/#components/asides/js.html">event listeners</a> if you like.
					</p>
					<figure data-ts="DoxMarkup">
						<script>
							<aside data-ts="Aside"
								ts.onopen="console.log('Will open')"
								ts.onopened="console.log('Did open')"
								ts.onclose="console.log('Will close')"
								ts.onclosed="console.log('Did close')">
								<div data-ts="Panel">
									<p>Aside content.</p>
								</div>
							</aside>
						</script>
					</figure>
				</section>

				<h3>Stacking asides</h3>
				<section>
					<p>Asides will automatically stack themselves whenever <a data-ts="Button" onclick="toggle('#one')">new asides open</a>.</p>
					<ul>
						<li>The old asides will slide elegantly to the right</li>
						<li>The new aside will float the top of the z-index</li>
					</ul>
				</section>
			</article>
		</main>


		<!-- asides  -->

		<aside data-ts="Aside" id="myaside" data-ts.title="Aside Title">
			<div data-ts="Panel"></div>
		</aside>
		
		<aside data-ts="Aside" id="tabaside" data-ts.title="Tabbed Aside">
			<div data-ts="Panel" data-ts.label="tab 1">
				<p>Bacon ipsum dolor sit pölsesnack, jerky pork belly short loin sausage andouille kevin capicola ham hamburger doner. Shank prosciutto flank kevin ribeye short ribs swine ham pork porchetta spare ribs kielbasa beef ribs. Prosciutto pancetta shank boudin. Corned beef shoulder capicola, turducken prosciutto pork belly sirloin shankle brisket chuck leberkas tail beef. Sirloin meatloaf pastrami beef ribs. Ball tip pastrami landjaeger, brisket Tradeshift strip steak short loin pancetta meatball corned beef tenderloin beef ribs spare ribs. Tradeshift sausage strip steak ham, ribeye pork loin meatball turkey corned beef shoulder. Leberkas jerky sirloin boudin, turducken ham hock pastrami. Doner pig boudin sausage, ball tip leberkas ground round beef jowl kielbasa tongue shankle spare ribs tail shoulder. Fatback pork kielbasa ham, doner pig short loin short ribs pancetta. Pancetta jerky biltong short loin capicola beef. Pork belly strip steak venison brisket shoulder beef filet mignon shank tenderloin tri-tip ground round shankle cow.</p>
			</div>
			<div data-ts="Panel" data-ts.label="tab 2">
				<p>Strip steak flank spare ribs leberkas jowl. Ball tip porchetta flank, sirloin ham hock t-bone salami spare ribs tenderloin capicola jerky kevin shoulder hamburger. Sausage landjaeger Tradeshift fatback, pancetta tenderloin andouille cupim ground round ball tip rump short loin turducken shankle kevin. Corned beef biltong venison ham hock hamburger, pork turducken. Ham short ribs pancetta fatback picanha hamburger, short loin corned beef shankle jowl frankfurter filet mignon doner. Pork chop venison ball tip landjaeger, strip steak doner kevin ribeye pork loin t-bone porchetta sirloin jerky frankfurter tail. Pancetta shank alcatra sirloin swine cow short ribs pork jerky venison flank corned beef prosciutto pig leberkas. Sirloin strip steak meatball, andouille turkey biltong shank beef ribs. Ham turkey spare ribs ground round pig prosciutto. Rump ham hock salami, Tradeshift pölsesnack burger.</p>
			</div>
		</aside>

		<aside data-ts="Aside" id="one" data-ts.open="false" data-ts.title="Aside One" class="ts-bg-red">
			<div data-ts="Panel">
				<p>
					<button data-ts="Button" onclick="toggle('#two')" class="ts-tertiary">
						<span>Open next aside</span>
					</button>
				</p>
			</div>
		</aside>

		<aside data-ts="Aside" id="two" data-ts.open="false" data-ts.title="Aside Two" class="ts-bg-purple">
			<div data-ts="Panel">
				<p>
					<button data-ts="Button" onclick="toggle('#three')" class="ts-tertiary">
						<span>Open next aside</span>
					</button>
				</p>
			</div>
		</aside>

		<aside data-ts="Aside" id="three" data-ts.open="false" data-ts.title="Aside Three" class="ts-bg-green">
			<div data-ts="Panel">
				<p>
					<button data-ts="Button" onclick="toggle('#one', '#two', '#three')" class="ts-primary">
						<span>Thanks, now close them</span>
					</button>
				</p>
			</div>
		</aside>

	</body>
</html>
