<!DOCTYPE html>
<html>
	<head>
		<title>SideBars</title>
		<script>
			var sidebars = ['#before-app', '#after-app', '#before-content', '#after-content'];
			function clone(id) {
				return document.querySelector(id + '-template').content.cloneNode(true);
			}
			function show(id) {
				var bar;
				sidebars.forEach(function(id) {
					if((bar = ts.ui.get(id))) {
						bar.dom.remove();
					}
				});
				bar = clone(id);
				switch(id) {
					case '#before-app':
						$('body').prepend(bar);
						break;
					case '#after-app':
					 	$('body').append(bar);
						break;
					case '#before-content':
						$('.ts-main').prepend(bar);
						break;
					case '#after-content':
						$('.ts-main').append(bar);
						break;
				}
			}
			ts.ui.ready(function() {
				document.querySelector('input[type=radio]:checked').onchange();
			});
		</script>
		<!--
				<aside data-ts="Aside" data-ts.title="Nested Aside" id="myaside">
					<div data-ts="Panel">
						<p>Aside content.</p>
					</div>
				</aside>
				<div data-ts="Footer">
					<p>Footer content. The button below is only relevant in <strong>mobile</strong> view.</p>
					<menu data-ts="Buttons">
						<li>
							<button data-ts="Button" class="ts-tertiary" onclick="gui.get('mysidebar').toggle()">
								<span>Toggle SideBar</span>
							</button>
						</li>
					</menu>
					</p>
				</div>
				-->
	</head>
	<body class="nosticky">
		<div data-ts="App">
			<div data-ts="Main">
				<div data-ts="Content">
					<div data-ts="Panel">
						<article>
							<h1>SideBar</h1>
							<section class="desc">
								<p>The SideBar is a panel used for interactions directly related to the main <val>Content</val>, such as filtering and sorting a list of items.</p>
							</section>
							<section>
								<p>Assign <att>data-ts="SideBar"</att> to an <elm>aside</elm> to initialize as a SideBar. The SideBar <em>must</em> be created with a child <val>Panel</val>.</p>
							</section>
							<figure data-ts="DoxMarkup">
								<script>
									<aside data-ts="SideBar">
										<div data-ts="Panel">
											<p>SideBar content.</p>
										</div>
									</aside>
								</script>
							</figure>
							<section class="ts-hide-mobile-only">
								<p>This sidebar should be positioned either before or after the <val>Content</val> element.</p>
								<form data-ts="Form">
									<fieldset>
										<label>
											<input type="radio" name="radio" onchange="show('#before-content')"/>
											<span>Before <val>Content</val></span>
										</label>
										<label>
											<input type="radio" name="radio" checked onchange="show('#after-content')"/>
											<span>After <val>Content</val></span>
										</label>
										<!--
										<label>
											<input type="radio" name="radio" onchange="show('#before-app')"/>
											<span>Before <val>App</val></span>
										</label>
										<label>
											<input type="radio" name="radio" onchange="show('#after-app')"/>
											<span>After <val>App</val></span>
										</label>
										-->
									</fieldset>
								</form>
							</section>

							<!--
							<p>Also note tht the SideBar <em>must</em> be positioned before or after the <val>Main</val> element:</p>
							<figure data-ts="DoxMarkup">
								<script>
									<main data-ts="Main"> ... 									<aside data-ts="SideBar"> ... </aside>
								</script>
							</figure>
						-->

							<!--
							<h3>Toggle the SideBar</h3>
							<p>In mobile breakpoint, the SideBar is hidden and must be toggled forth manually. If you resize to <em>mobile view</em>, you can try it with this button.</p>
							<p>
								<button data-ts="Button" class="ts-primary" onclick="gui.get('mysidebar').toggle()">
									<span>Toggle SideBar</span>
								</button>
							</p>
							<p>You can toggle the SideBar like you would <a data-ts="Button" href="/#components/asides/js.html">toggle an Aside</a>.</p>
							<figure data-ts="DoxScript">
								<script>
									var sidebar = gui.get('#mysidebar');
									sidebar.open();
									sidebar.close();
									sidebar.toggle();
								</script>
							</figure>

							<h3>Bonus panels</h3>
							<p>You can put a <val>Footer</val> next to the <val>Panel</val>. The Footer will stick to the bottom of the SideBar.</p>
							<figure data-ts="DoxMarkup">
								<script>
									<aside data-ts="SideBar" id="mysidebar" data-ts.title="My SideBar">
										<div data-ts="Panel"> ... </div>
										<div data-ts="Footer" class="ts-show-mobile-only"> ... </div>
									</aside>
								</script>
							</figure>
							<div data-ts="Note">
								<i class="ts-icon-info"></i>
								<p>If you want this to be visible in mobile only, as the current designs suggest, you can assign it the classname <val>ts-show-mobile-only</val>.</p>
							</div>

							<h3>Nesting Asides</h3>
							<p>You can make <em>subsidebars</em> by nesting Aside components in the <val>ts-sidebar</val>. The Aside can be opened and closed like a <a data-ts="Button" href="/#components/asides/js.html">normal Aside</a>.</p>
							<figure data-ts="DoxMarkup">
								<script>
									<aside data-ts="SideBar">
										<div data-ts="Panel">
											<p>SideBar content</p>
										</div>
										<aside data-ts="Aside">
											<div data-ts="Panel">
												<p>Aside content.</p>
											</div>
										</aside>
									</aside>
								</script>
							</figure>
							
							<h3>Custom toolbar buttons</h3>
							<p>The SideBar header works like a Toolbar. You can add buttons with an API, so we'll add a button to toggle that Aside we talked about.</p>
							<figure data-ts="DoxScript">
								<script type="runnable">
									var sidebar = gui.get('#mysidebar');
									var header = sidebar.header();
									header.buttons.push({
										icon: 'ts-icon-add',
										onclick: function() {
											gui.get('#myaside').toggle();
										}
									});
								</script>
							</figure>
							<div data-ts="Note">
								<i class="ts-icon-warning"></i>
								<p>This API is likely to change!</p>
							</div>
							-->
						</article>
					</div>
				</div>
			</div>
		</div>

		<!-- templates ......................................................... -->
		
		<template id="before-app-template">
			<aside data-ts="SideBar" id="before-app" data-ts.title="Before App">
				<div data-ts="Panel">
					<p>SideBar before <val>App</val>.</p>
				</div>
			</aside>
		</template>
		<template id="after-app-template">
			<aside data-ts="SideBar" id="after-app" data-ts.title="After App">
				<div data-ts="Panel">
					<p>SideBar after <val>App</val>.</p>
				</div>
			</aside>
		</template>
		<template id="before-content-template">
			<aside data-ts="SideBar" id="before-content" data-ts.title="My Filters">
				<div data-ts="Panels">
					<div data-ts="Panel" data-ts.label="Hansen">
						<p>SideBar before <val>Content</val>.</p>
					</div>
					<div data-ts="Panel" data-ts.label="Jensen">
						<p>Dav.</p>
					</div>
				</div>
			</aside>
		</template>
		<template id="after-content-template">
			<aside data-ts="SideBar" id="after-content" data-ts.title="My Filters">
				<div data-ts="Panel">
					<p>SideBar after <val>Content</val>.</p>
				</div>
			</aside>
		</template>
	</body>
</html>
