<!DOCTYPE html>
<html>
	<head>
		<title>UserImage</title>
	</head>
	<body>
		<header data-ts="TopBar"></header>
		<main data-ts="Main">
			<article>
				<h1>UserImage</h1>
				<section class="desc">
					<p>If the user didn't upload a photo, the UserImage will generate a fallback image based on his or her name.</p>
				</section>
				<section>
					<p>You can initialize a UserImage by assigning <att>data-ts="UserImage"</att> to an <elm>img</elm> element. A fallback image will be generated based on the users name if the image has no <att>src</att> attribute or if the image somehow failed to load.</p>
					<figure data-ts="DoxMarkup">
						<output/>
						<script>
							<img data-ts="UserImage" src="assets/jim.png" alt="Jim Bob Johnson"/>
							<img data-ts="UserImage" alt="Karl Benson"/>
							<img data-ts="UserImage" alt="Marshall Garrett"/>
							<img data-ts="UserImage" alt="Kelvin Castro"/>
							<img data-ts="UserImage" alt="Natalie Carr"/>
							<img data-ts="UserImage" alt="Rochelle Cox"/>
							<img data-ts="UserImage" alt="Mae Schultz"/>
							<img data-ts="UserImage" alt="Jimmie Edwards"/>
							<img data-ts="UserImage" alt="Cindy Jordan"/>
							<img data-ts="UserImage" alt="Ray Chavez"/>
						</script>
					</figure>
					<p>The image defaults to a size of <code>44x44</code> pixels. If you prefer a different size, you'll need to specify both <code>width</code> and <code>height</code> as attributes in the HTML.</p>
					<figure data-ts="DoxMarkup">
						<script>
							<img ts-userimage alt="Trip Fontaine" width="88" height="88"/>
						</script>
					</figure>
				</section>
			</article>
		</main>
	</body>
</html>
