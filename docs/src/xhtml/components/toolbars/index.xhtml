<!DOCTYPE html>
<html>
	<head>
		<title>ToolBar</title>
		<script src="tabs.js"></script>
	</head>
	<body>
		<header data-ts="TopBar"></header>
		<header data-ts="ToolBar" data-ts.title="ToolBar before Main"></header>
		<main data-ts="Main">
			<article>
				<h1>ToolBar</h1>
				<section class="desc">
					<p>The ToolBar may contain search-fields and buttons (for now). Unlike the TopBar, there can be multiple ToolBars on a page.</p>
				</section>
				<section>
					<p>Assign <att>data-ts="ToolBar"</att> to a <elm>header</elm> or <elm>footer</elm> to initialize it as a ToolBar. The ToolBar can be positioned <em>anywhere on the page</em>, but the dropshadow will only appear when it's positioned before or after the <val>Main</val> element. This will also make the toolbar stay fixed whenever the page is scrolling.</p>
					<figure data-ts="DoxMarkup">
						<script>
							<body>
								<header data-ts="ToolBar"></header>
								<main data-ts="Main"></main>
								<footer data-ts="ToolBar"></footer>
							</body>
						</script>
					</figure>
					<p>You can use the <att>data-ts.title</att> attribute to assign a title to the ToolBar.</p>
					<figure data-ts="DoxMarkup">
						<script>
							<footer data-ts="ToolBar" data-ts.title="ToolBar after Main"></footer>
						</script>
					</figure>
					<p>All other features are controlled <a data-ts="Button" href="/#components/toolbars/js.html">through an API</a>. Here's a quick summary.</p>
					<table class="api">
						<caption>
							<code>ts.ui.ToolBarSpirit</code>
						</caption>
						<tbody>
							<tr>
								<th colspan="3">Instance methods.</th>
							</tr>
							<tr>
								<td><code>title</code></td>
								<td><code>{string}</code></td>
								<td>Pass a string to set the title. Omit the argument to get the title.</td>
							</tr>
							<tr>
								<td><code>search</code></td>
								<td><code>{object}</code></td>
								<td>Pass an object to configure the search. Omit the argument to get the search.</td>
							</tr>
							<tr>
								<td><code>buttons</code></td>
								<td><code>{array}</code></td>
								<td>Pass an array of objects to configure the buttons. Omit the argument to get the buttons.</td>
							</tr>
						</tbody>
					</table>
				</section>
			</article>
		</main>
		<footer data-ts="ToolBar" data-ts.title="ToolBar after Main"></footer>
	</body>
</html>
