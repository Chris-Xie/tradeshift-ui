// ts-variables.less ...........................................................

// Units .......................................................................

@ts-unit: 20px;
@ts-unit-half: (@ts-unit / 2);
@ts-unit-plus: (@ts-unit * 1.5);
@ts-unit-quarter: (@ts-unit / 4);
@ts-unit-eighth: (@ts-unit / 8);
@ts-unit-double: (@ts-unit * 2);
@ts-unit-triple: (@ts-unit * 3);
@ts-width-aside: 320px;
@ts-width-grails: (@ts-width-aside - @ts-unit-double);

// Fonts .......................................................................

@ts-fontsize-small: 11px;
@ts-fontsize-mini: 12px;
@ts-fontsize: 14px;
@ts-fontsize-medium: 16px;
@ts-fontsize-big: 18px;
@ts-fontsize-xbig: 24px;
@ts-fontsize-xxbig: 36px;
@ts-fontsize-icon: 22px;

@ts-fontweight-light: 300;
@ts-fontweight: 400;
@ts-fontweight-semibold: 600;
@ts-fontweight-bold: 700;

@ts-fontstack: 'Open Sans', 'Helvetica Neue', 'Lucida Grande', 'Segoe UI', 'Ubuntu', 'Droid Sans', sans-serif;
@ts-fontstack-mono: 'Ubuntu Mono', 'Menlo', 'Monaco', 'Consolas', 'Bitstream Vera Sans Mono', monospace;
@ts-fontstack-icon: 'Tradeshifticons', fantasy;

@ts-radius: 3px;

// Z-index .....................................................................

@ts-zindex-main: 0;
@ts-zindex-topbar: 1000;
@ts-zindex-modal: 1500;
@ts-zindex-aside: 2000;
@ts-zindex-dialog: 3000;
@ts-zindex-spin: 4000;
@ts-zindex-max: 10000;
@ts-zindex-dialog-cover: @ts-zindex-dialog - 1;
@ts-zindex-aside-cover: @ts-zindex-aside - 1;
@ts-zindex-spin-cover: @ts-zindex-spin - 1;

// Colors ......................................................................

// Base colors
@ts-color-white:  hsl(0, 0%, 100%);
@ts-color-black:  hsl(204, 25%, 8%);
@ts-color-red: 	  hsl(0, 100%, 37%);
@ts-color-orange: hsl(33, 100%, 50%);
@ts-color-yellow: hsl(44, 98%, 53%);
@ts-color-green: 	hsl(99, 85%, 42%);
@ts-color-blue: 	hsl(199, 100%, 50%);
@ts-color-purple: hsl(295, 79%, 34%);
@ts-color-pink: 	hsl(325, 98%, 33%);
@ts-color-gray: 	hsl(0, 0%, 74%);
@ts-color-slate: 	hsl(0, 0%, 20%);

// Support for custom branding
// @ts-custom-branding-color: @ts-color-blue;
// .apply-custom-branding(@ts-custom-branding-color);
// .apply-custom-branding(@ts-custom-branding-color) when (iscolor(@ts-custom-branding-color)) {
//   @ts-color-gray: 	mix(hsl(0, 0%, 74%), @ts-custom-branding-color, 95%);
//   @ts-color-slate: 	mix(hsl(0, 0%, 20%), @ts-custom-branding-color, 95%);
// }
// .apply-custom-branding(@ts-custom-branding-color) when not (iscolor(@ts-custom-branding-color)) {
// 	@ts-color-gray: 	hsl(0, 0%, 74%);
// 	@ts-color-slate: 	hsl(0, 0%, 20%);
// }

// Computed colors - use base color to generate color shades.
@ts-color-red-lightest:			lighten(@ts-color-red, 55%);
@ts-color-red-lighter: 			lighten(@ts-color-red, 45%);
@ts-color-red-light:  			lighten(desaturate(@ts-color-red, 30%), 20%);
@ts-color-red-dark: 				darken(@ts-color-red, 10%);
@ts-color-red-darker: 			darken(@ts-color-red, 15%);

@ts-color-orange-lightest: 	lighten(@ts-color-orange, 40%);
@ts-color-orange-lighter:		lighten(@ts-color-orange, 35%);
@ts-color-orange-light: 		lighten(@ts-color-orange, 20%);
@ts-color-orange-dark: 			darken(@ts-color-orange, 10%);
@ts-color-orange-darker: 		darken(@ts-color-orange, 15%);

@ts-color-yellow-lightest: 	lighten(@ts-color-yellow, 40%);
@ts-color-yellow-lighter: 	lighten(@ts-color-yellow, 35%);
@ts-color-yellow-light: 		lighten(@ts-color-yellow, 20%);
@ts-color-yellow-dark: 			darken(@ts-color-yellow, 10%);
@ts-color-yellow-darker: 		darken(@ts-color-yellow, 15%);

@ts-color-green-lightest: 	lighten(@ts-color-green, 50%);
@ts-color-green-lighter: 		lighten(@ts-color-green, 35%);
@ts-color-green-light: 			lighten(@ts-color-green, 20%);
@ts-color-green-dark: 			darken(@ts-color-green, 10%);
@ts-color-green-darker: 		darken(@ts-color-green, 15%);

@ts-color-blue-lightest: 		lighten(@ts-color-blue, 40%);
@ts-color-blue-lighter: 		lighten(@ts-color-blue, 35%);
@ts-color-blue-light: 			lighten(@ts-color-blue, 20%);
@ts-color-blue-dark: 				darken(@ts-color-blue, 10%);
@ts-color-blue-darker: 			darken(@ts-color-blue, 15%);

@ts-color-purple-lightest: 	lighten(@ts-color-purple, 55%);
@ts-color-purple-lighter: 	lighten(@ts-color-purple, 50%);
@ts-color-purple-light: 		lighten(desaturate(@ts-color-purple, 30%), 20%);
@ts-color-purple-dark: 			darken(@ts-color-purple, 10%);
@ts-color-purple-darker: 		darken(@ts-color-purple, 15%);

@ts-color-pink-lightest: 		lighten(@ts-color-pink, 55%);
@ts-color-pink-lighter: 		lighten(@ts-color-pink, 50%);
@ts-color-pink-light: 			lighten(desaturate(@ts-color-pink, 40%), 20%);
@ts-color-pink-dark: 				darken(@ts-color-pink, 10%);
@ts-color-pink-darker: 			darken(@ts-color-pink, 15%);

@ts-color-gray-lightest: 		lighten(@ts-color-gray, 25%);
@ts-color-gray-lighter:  		lighten(@ts-color-gray, 20%);
@ts-color-gray-light: 			lighten(@ts-color-gray, 10%);
@ts-color-gray-dark: 				darken(@ts-color-gray, 10%);
@ts-color-gray-darker: 			darken(@ts-color-gray, 15%);

@ts-color-slate-lightest: 	lighten(@ts-color-slate, 20%);
@ts-color-slate-lighter: 		lighten(@ts-color-slate, 10%);
@ts-color-slate-light: 			lighten(@ts-color-slate, 3%);
@ts-color-slate-dark: 			darken(@ts-color-slate, 5%);
@ts-color-slate-darker: 		darken(@ts-color-slate, 10%);

@ts-colors: ts-color-red-lightest,      ts-color-red-lighter,       ts-color-red-light,       ts-color-red,       ts-color-red-dark,      ts-color-red-darker,
            ts-color-orange-lightest,   ts-color-orange-lighter,    ts-color-orange-light,    ts-color-orange,    ts-color-orange-dark,   ts-color-orange-darker,
            ts-color-yellow-lightest,   ts-color-yellow-lighter,    ts-color-yellow-light,    ts-color-yellow,    ts-color-yellow-dark,   ts-color-yellow-darker,
            ts-color-green-lightest,    ts-color-green-lighter,     ts-color-green-light,     ts-color-green,     ts-color-green-dark,    ts-color-green-darker,
            ts-color-blue-lightest,     ts-color-blue-lighter,      ts-color-blue-light,      ts-color-blue,      ts-color-blue-dark,     ts-color-blue-darker,
            ts-color-purple-lightest,   ts-color-purple-lighter,    ts-color-purple-light,    ts-color-purple,    ts-color-purple-dark,   ts-color-purple-darker,
            ts-color-pink-lightest,     ts-color-pink-lighter,      ts-color-pink-light,      ts-color-pink,      ts-color-pink-dark,     ts-color-pink-darker,
            ts-color-gray-lightest,     ts-color-gray-lighter,      ts-color-gray-light,      ts-color-gray,      ts-color-gray-dark,     ts-color-gray-darker,
            ts-color-slate-lightest,    ts-color-slate-lighter,     ts-color-slate-light,     ts-color-slate,     ts-color-slate-dark,    ts-color-slate-darker;




// Animations ..................................................................

@ts-transition-now: 0.1s;
@ts-transition-fast: 0.2s;
@ts-transition-slow: 0.6s;

// live examples in dropdown on http://matthewlein.com/ceaser/
@ts-timing-easeinquad: cubic-bezier(0.55, 0.085, 0.68, 0.53);
@ts-timing-easeincubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);
@ts-timing-easeinquart: cubic-bezier(0.895, 0.03, 0.685, 0.22);
@ts-timing-easeinquint: cubic-bezier(0.755, 0.05, 0.855, 0.06);
@ts-timing-easeinsine: cubic-bezier(0.47, 0, 0.745, 0.715);
@ts-timing-easeinexpo: cubic-bezier(0.95, 0.05, 0.795, 0.035);
@ts-timing-easeincirc: cubic-bezier(0.6, 0.04, 0.98, 0.335);
@ts-timing-easeinback: cubic-bezier(0.6, -0.28, 0.735, 0.045);

@ts-timing-easeoutquad: cubic-bezier(0.25, 0.46, 0.45, 0.94);
@ts-timing-easeoutcubic: cubic-bezier(0.215, 0.61, 0.355, 1);
@ts-timing-easeoutquart: cubic-bezier(0.165, 0.84, 0.44, 1);
@ts-timing-easeoutquint: cubic-bezier(0.23, 1, 0.32, 1);
@ts-timing-easeoutsine: cubic-bezier(0.39, 0.575, 0.565, 1);
@ts-timing-easeoutexpo: cubic-bezier(0.19, 1, 0.22, 1);
@ts-timing-easeoutcirc: cubic-bezier(0.075, 0.82, 0.165, 1);
@ts-timing-easeoutback: cubic-bezier(0.175, 0.885, 0.32, 1.275);

@ts-timing-easeinoutquad: cubic-bezier(0.455, 0.03, 0.515, 0.955);
@ts-timing-easeinoutcubic: cubic-bezier(0.645, 0.045, 0.355, 1);
@ts-timing-easeinoutquart: cubic-bezier(0.77, 0, 0.175, 1);
@ts-timing-easeinoutquint: cubic-bezier(0.86, 0, 0.07, 1);
@ts-timing-easeinoutsine: cubic-bezier(0.445, 0.05, 0.55, 0.95);
@ts-timing-easeinoutexpo: cubic-bezier(1, 0, 0, 1);
@ts-timing-easeinoutcirc: cubic-bezier(0.785, 0.135, 0.15, 0.86);
@ts-timing-easeinoutback: cubic-bezier(0.68, -0.55, 0.265, 1.55);



// ts-mixins.less ..............................................................


// General Mixins ..............................................................
.ts-mixin-unselectable() {
	user-select: none;
}
.ts-mixin-selectable() {
	user-select: text;
}

.ts-mixin-border-box() {
	box-sizing: border-box;
}
.ts-mixin-content-box() {
	box-sizing: content-box;
}

.ts-mixin-maximize(@top: 0, @right: 0, @bottom: 0, @left: 0) {
	position: absolute;
	top: @top;
	right: @right;
	bottom: @bottom;
	left: @left;
}

.ts-mixin-fix(@width: auto, @height: auto) {
	.ts-mixin-fixwidth(@width);
	.ts-mixin-fixheight(@height);
}
.ts-mixin-fixwidth(@width: auto) {
	width: @width;
	max-width: @width;
	min-width: @width;
}
.ts-mixin-fixheight(@height: auto) {
	height: @height;
	max-height: @height;
	min-height: @height;
}

.ts-mixin-contain() {
	&:after {
		content: '';
		display: block;
		clear: both;
	}
}
.ts-mixin-label-text() {
	text-transform: uppercase;
	font-size: @ts-fontsize-small;
	font-weight: @ts-fontweight-semibold;
}

.ts-mixin-rounded( @tl : @ts-radius, @tr : @ts-radius, @br : @ts-radius, @bl : @ts-radius ) {
	border-radius: @tl @tr @br @bl;
}
.ts-mixin-noround() {
	border-radius: 0;
}
.ts-mixin-rounded-t() {
	border-radius: @ts-radius @ts-radius 0 0;
}
.ts-mixin-rounded-r() {
	border-radius: 0 @ts-radius @ts-radius 0;
}
.ts-mixin-rounded-b() {
	border-radius: 0 0 @ts-radius @ts-radius;
}
.ts-mixin-rounded-l() {
	border-radius: @ts-radius 0 0 @ts-radius;
}
.ts-mixin-rounded-tl() {
	border-radius: @ts-radius 0 0 0;
}
.ts-mixin-rounded-tr() {
	border-radius: 0 @ts-radius 0 0;
}
.ts-mixin-rounded-bl() {
	border-radius: 0 0 0 @ts-radius;
}
.ts-mixin-rounded-br() {
	border-radius: 0 0 @ts-radius 0;
}

.ts-mixin-expand( @value : @ts-unit-half ) {
	margin-left: -@value;
	margin-right: -@value;
}

.ts-mixin-liftup( @value : @ts-unit-half ) {
	margin-top: -@value;
}

.ts-mixin-reduce( @value : @ts-unit-half ) {
	padding-left: @value;
	padding-right: @value;
}
.ts-mixin-reduce-l( @value : @ts-unit-half ) {
	padding-left: @value;
}
.ts-mixin-reduce-r( @value : @ts-unit-half ) {
	padding-right: @value;
}

// Appearance ..................................................................
.ts-mixin-menuitem(@spanwidth: auto) {
	padding: @ts-unit-half;
	text-align: left;
	display: inline-block;
	text-decoration: none;
	.ts-mixin-unselectable();
	span {
		width: @spanwidth;
	}
	> span,
	> i {
		display: table-cell;
		vertical-align: middle;
	}
	> i ~ span,
	> span ~ i {
		padding-left: 8px;
	}
	> i:only-child {
		line-height: @ts-unit;
	}
	&:hover {
		text-decoration: none;
	}
}

.ts-mixin-icon(@fontsize: @ts-fontsize-icon) {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	font-family: @ts-fontstack-icon;
	font-size: @fontsize;
	font-weight: @ts-fontweight;
	font-style: normal;
	text-decoration: none;
	text-transform: none;
	display: inline;
	line-height: 0;
	text-align: center;
}

.ts-mixin-button-text() {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	text-transform: uppercase;
	letter-spacing: 0.02em;
	font-weight: @ts-fontweight-semibold;
}

.ts-mixin-text-ellipsis() {
	text-overflow: ellipsis;
}

// Transitions ..................................................................
.ts-mixin-transition( @what : all, @length : @ts-transition-fast, @easing : ease, @delay : 0s ) {
	transition-property: @what;
	.ts-mixin-transition-duration(@length);
	.ts-mixin-transition-timing(@easing);
	.ts-mixin-transition-delay(@delay);
}
.ts-mixin-transition-transform( @length : @ts-transition-fast, @easing : ease, @delay : 0s ) {
	.ts-mixin-transition( transform, @length, @easing, @delay );
}
.ts-mixin-transition-duration(@length: @ts-transition-fast) {
	transition-duration: @length;
}
.ts-mixin-transition-timing(@easing: ease-in-out) {
	transition-timing-function: @easing;
}
.ts-mixin-transition-delay(@delay: 0) {
	transition-delay: @delay;
}
.ts-mixin-transition-colors(@length: @ts-transition-fast, @easing: ease) {
	transition-property: color, background-color, border-color;
	.ts-mixin-transition-duration(@length);
	.ts-mixin-transition-timing(@easing);
}

// Animations ..................................................................
.ts-mixin-animation(@name, @duration: 250ms, @ease: ease, @delay: 0) {
	animation: @name @duration @ease @delay;
}

.ts-mixin-keyframes(@name, @fromRules, @toRules) {
	@keyframes @name {
		0% {
			@fromRules();
		}
		100% {
			@toRules();
		}
	}
}

// Transformations .............................................................
.ts-mixin-transform( @shorthand : none ) {
	transform: @shorthand;
}

.ts-mixin-scale( @factor ) {
	transform: scale(@factor);
}
.ts-mixin-scaleX( @factor ) {
	transform: scaleX(@factor);
}
.ts-mixin-scaleY( @factor ) {
	transform: scaleY(@factor);
}

.ts-mixin-rotate( @deg ) {
	transform: rotate(@deg);
}

.ts-mixin-translate( @x, @y:0 ) {
	transform: translate(@x, @y);
}
.ts-mixin-translate3d( @x, @y: 0, @z: 0 ) {
	transform: translate3d(@x, @y, @z);
}

.ts-mixin-perspective( @value: 1000px ) {
	perspective: @value;
}

.ts-mixin-transform-origin( @x:center, @y:center  ) {
	transform-origin: @x @y;
}

// Danger zone: Modern browsers only ...........................................
.ts-mixin-flexbox() {
	display: flex;
	flex-wrap: nowrap;
}
.ts-mixin-flexcol() {
	.ts-mixin-flexbox();
	flex-direction: column;
	min-height: auto;
	height: 100%;
}
.ts-mixin-flexrow() {
	.ts-mixin-flexbox();
	flex-direction: row;
	min-width: auto;
	width: 100%;
}
.ts-mixin-flex(@value: 1) {
	flex-grow: @value;
	flex-basis: @value;
}

// Loading bar .................................................................
.ts-mixin-progress-bar-gradient(@color1: black, @color2: white) {
	background-image: linear-gradient(
		-45deg, @color1 25%, @color2 25%, @color2 50%, @color1 50%, @color1 75%, @color2 75%, @color2
	);
}



